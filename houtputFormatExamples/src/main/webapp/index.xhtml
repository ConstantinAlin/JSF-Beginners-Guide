<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:o="http://omnifaces.org/ui">
    <h:head>
        <title>JSF outputFormat examples</title>
        <style type="text/css">
            .outputFormat-css{
                font-weight:bold; /* Setting font to bold */
                color:red; /* Setting color to red */
            }
            .grey {
                color:grey; /* Setting color to grey */
            }
            .red{
                color:red; /* Setting color to red */
            }
        </style>
    </h:head>
    <h:body>
        <!-- Basic/common usage (I) - using static value parameter -->
        <strong>Example 1:</strong> Basic/common usage (I) - using static value parameter<hr/>
        <h:outputFormat value="{0} Weblog">
            <f:param value="OmniFaces"/>
        </h:outputFormat>
        <hr/><br/>

        <!-- Basic/common usage (II) - using dynamic value parameter from properties file -->
        <strong>Example 2:</strong> Basic/common usage (II) - using dynamic value parameter from properties file<hr/>
        <f:loadBundle basename="msgs.Messages" var="msg"/>
        <h:outputFormat value="{0} Weblog">
            <f:param value="#{msg.TITLE}"/>
        </h:outputFormat>
        <hr/><br/>

        <!-- Basic/common usage (III) - using dynamic value parameters from managed bean -->
        <strong>Example 3:</strong> Basic/common usage (III) - using dynamic value parameters from managed bean<hr/>
        <h:outputFormat value="Welcome {0}. You have {1} new messages.">
            <f:param value="#{playerBean.user}"/>
            <f:param value="#{playerBean.messages}"/>
        </h:outputFormat>
        <hr/><br/>

        <!-- Styling output with inner CSS -->
        <strong>Example 4:</strong> Styling output with inner CSS<hr/>
        <h:outputFormat value="{0} Weblog" style="font-weight:bold;color:grey;">
            <f:param value="OmniFaces"/>
        </h:outputFormat>
        <hr/><br/>

        <!-- Styling images with CSS class -->
        <strong>Example 5:</strong> Styling output with CSS class<hr/>
        <h:outputFormat value="{0} Weblog" styleClass="outputFormat-css">
            <f:param value="OmniFaces"/>
        </h:outputFormat>
        <hr/><br/>

        <strong>Example 6:</strong> Styling individual value parameters with CSS<hr/>
        <h:outputFormat value="Welcome {0}. You have {1} new messages." escape="false">
            <o:param>
                <h:outputFormat value="{0}" class="grey">
                    <f:param value="#{playerBean.user}"/>
                </h:outputFormat>
            </o:param>
            <o:param>
                <h:outputFormat value="{0}" class="red">
                    <f:param value="#{playerBean.messages}"/>
                </h:outputFormat>
            </o:param>
        </h:outputFormat>
        <hr/><br/>

        <!-- Capture the output and expose it into request scope -->
        <strong>Example 7:</strong> Capture the output and expose it into request scope by the variable name as specified by the 'var' attribute<hr/>
        <o:outputFormat value="{0}" var="_url">
            <f:param value="http://www.omnifaces-fans.org/"/>
        </o:outputFormat>
        More resources on
        <h:outputLink value="#{_url}" title="#{_url}">
            OmniFaces &amp; JSF Fans.
        </h:outputLink>
    </h:body>
</html>
